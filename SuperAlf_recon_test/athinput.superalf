<comment>
problem   = super alf problem for testing the spectrum in different reconstruction order
reference = 
configure = python configure.py --prob=turb_chem -eos=isothermal -fft -mpi -hdf5 -b --nghost = 4

<job>
problem_id = superalf  # problem ID: basename of output filenames

<output1>
file_type  = hst         # History data dump
dt         = 0.001       # time increment between outputs

<output2>
file_type  = hdf5        # Binary data dump
variable   = prim        # variables to be output
dt         = 50.0        # time increment between outputs

#<output3>
#file_type  = rst        # History data dump
#dt         = 50.0       # time increment between outputs

<time>
cfl_number = 0.3        # The Courant, Friedrichs, & Lewy (CFL) Number
nlim       = 10000000   # cycle limit
tlim       = 500.0      # time limit
integrator  = vl2       # time integration algorithm
xorder      = 2         # order of spatial reconstruction
ncycle_out  = 1         # interval for stdout summary info

<mesh>
nx1        = 256        # Number of zones in X1-direction
x1min      = -5         # minimum value of X1
x1max      =  5         # maximum value of X1
ix1_bc     = periodic   # inner-X1 boundary flag
ox1_bc     = periodic   # outer-X1 boundary flag

nx2        = 256        # Number of zones in X2-direction
x2min      = -5         # minimum value of X2
x2max      =  5         # maximum value of X2
ix1_bc     = periodic   # inner-X1 boundary flag
ox1_bc     = periodic   # outer-X1 boundary flag

nx3        = 256        # Number of zones in X3-direction
x3min      = -5         # minimum value of X3
x3max      =  5         # maximum value of X3
ix1_bc     = periodic   # inner-X1 boundary flag
ox1_bc     = periodic   # outer-X1 boundary flag

<meshblock>
nx1        =    64
nx2        =    64
nx3        =    32

#hydro block is mendatory
<hydro>
gamma = 1.666666666666667   # gamma = C_p/C_v
iso_sound_speed = 0.191919  # isothermal sound speed
#sfloor   =   0              # passive scalar floor
#active   =   fixed          # post-processing

<problem>
turb_flag  = 3        # 1 for decaying, 2 (impulsive) or 3 (continuous) for driven turbulence
beta       = 800      # beta = \sqrt(2*cs*cs*nH/beta)
nH         = 1.0      # The density of each pixel (Unit: mH cm^-3)

<turbulence>
dedt       = 10       # Energy injection rate (for driven) or Total energy (for decaying)
nlow       = 0        # cut-off wavenumber at low-k
nhigh      = 12       # cut-off wavenumber at high-k
expo       = 2.0      # power-law exponent
tcorr      = 0.5      # correlation time for OU process (both impulsive and continuous)
dtdrive    = 0.2      # time interval between perturbation (impulsive)
rseed      = -1       # if non-negative, seed will be set by hand (slow PS generation)

<radiation>
G0           = 1
CR           = 2e-16  #Cosmic-ray ionization rate per H
n_frequency  = 8 
output_zone_sec = true #output diagnostic
